{"version":3,"file":"AbortablePromise.js","sources":["uni_modules/wot-design-uni/components/common/AbortablePromise.ts"],"sourcesContent":["export class AbortablePromise<T> {\r\n  promise: Promise<T>\r\n  private _reject: ((res?: any) => void) | null = null\r\n\r\n  constructor(executor: (resolve: (value: T | PromiseLike<T>) => void, reject: (reason?: any) => void) => void) {\r\n    this.promise = new Promise<T>((resolve, reject) => {\r\n      executor(resolve, reject)\r\n      this._reject = reject // 保存reject方法的引用，以便在abort时调用\r\n    })\r\n  }\r\n  // 提供abort方法来中止Promise\r\n  abort(error?: any) {\r\n    if (this._reject) {\r\n      this._reject(error) // 调用reject方法来中止Promise\r\n    }\r\n  }\r\n\r\n  then<TResult1 = T, TResult2 = never>(\r\n    onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null,\r\n    onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null\r\n  ): Promise<TResult1 | TResult2> {\r\n    return this.promise.then(onfulfilled, onrejected)\r\n  }\r\n\r\n  catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult> {\r\n    return this.promise.catch(onrejected)\r\n  }\r\n}\r\n"],"names":[],"mappings":";AAAO,MAAM,iBAAoB;AAAA,EAI/B,YAAY,UAAkG;AAF9G,SAAQ,UAAwC;AAG9C,SAAK,UAAU,IAAI,QAAW,CAAC,SAAS,WAAW;AACjD,eAAS,SAAS,MAAM;AACxB,WAAK,UAAU;AAAA,IAAA,CAChB;AAAA,EACH;AAAA;AAAA,EAEA,MAAM,OAAa;AACjB,QAAI,KAAK,SAAS;AAChB,WAAK,QAAQ,KAAK;AAAA,IACpB;AAAA,EACF;AAAA,EAEA,KACE,aACA,YAC8B;AAC9B,WAAO,KAAK,QAAQ,KAAK,aAAa,UAAU;AAAA,EAClD;AAAA,EAEA,MAAuB,YAAyG;AACvH,WAAA,KAAK,QAAQ,MAAM,UAAU;AAAA,EACtC;AACF;;"}