{"version":3,"file":"wd-input.js","sources":["uni_modules/wot-design-uni/components/wd-input/wd-input.vue","D:/software/HBuilderX/plugins/uniapp-cli-vite/uniComponent:/RjoveXVuc29vX21vYmlsZS91bmlfbW9kdWxlcy93b3QtZGVzaWduLXVuaS9jb21wb25lbnRzL3dkLWlucHV0L3dkLWlucHV0LnZ1ZQ"],"sourcesContent":["<template>\r\n  <view :class=\"rootClass\" :style=\"customStyle\" @click=\"handleClick\">\r\n    <view v-if=\"label || $slots.label\" :class=\"labelClass\" :style=\"labelStyle\">\r\n      <view v-if=\"prefixIcon || $slots.prefix\" class=\"wd-input__prefix\">\r\n        <wd-icon v-if=\"prefixIcon && !$slots.prefix\" custom-class=\"wd-input__icon\" :name=\"prefixIcon\" @click=\"onClickPrefixIcon\" />\r\n        <slot v-else name=\"prefix\"></slot>\r\n      </view>\r\n      <view class=\"wd-input__label-inner\">\r\n        <template v-if=\"label && !$slots.label\">{{ label }}</template>\r\n        <slot v-else name=\"label\"></slot>\r\n      </view>\r\n    </view>\r\n    <view class=\"wd-input__body\">\r\n      <view class=\"wd-input__value\">\r\n        <view v-if=\"(prefixIcon || $slots.prefix) && !label\" class=\"wd-input__prefix\">\r\n          <wd-icon v-if=\"prefixIcon && !$slots.prefix\" custom-class=\"wd-input__icon\" :name=\"prefixIcon\" @click=\"onClickPrefixIcon\" />\r\n          <slot v-else name=\"prefix\"></slot>\r\n        </view>\r\n        <input\r\n          :class=\"[\r\n            'wd-input__inner',\r\n            prefixIcon ? 'wd-input__inner--prefix' : '',\r\n            showWordCount ? 'wd-input__inner--count' : '',\r\n            alignRight ? 'is-align-right' : '',\r\n            customInputClass\r\n          ]\"\r\n          :type=\"type\"\r\n          :password=\"showPassword && !isPwdVisible\"\r\n          v-model=\"inputValue\"\r\n          :placeholder=\"placeholderValue\"\r\n          :disabled=\"disabled || readonly\"\r\n          :maxlength=\"maxlength\"\r\n          :focus=\"focused\"\r\n          :confirm-type=\"confirmType\"\r\n          :confirm-hold=\"confirmHold\"\r\n          :cursor=\"cursor\"\r\n          :cursor-spacing=\"cursorSpacing\"\r\n          :placeholder-style=\"placeholderStyle\"\r\n          :selection-start=\"selectionStart\"\r\n          :selection-end=\"selectionEnd\"\r\n          :adjust-position=\"adjustPosition\"\r\n          :hold-keyboard=\"holdKeyboard\"\r\n          :always-embed=\"alwaysEmbed\"\r\n          :placeholder-class=\"inputPlaceholderClass\"\r\n          :ignoreCompositionEvent=\"ignoreCompositionEvent\"\r\n          :inputmode=\"inputmode\"\r\n          @input=\"handleInput\"\r\n          @focus=\"handleFocus\"\r\n          @blur=\"handleBlur\"\r\n          @confirm=\"handleConfirm\"\r\n          @keyboardheightchange=\"handleKeyboardheightchange\"\r\n        />\r\n        <view v-if=\"props.readonly\" class=\"wd-input__readonly-mask\" />\r\n        <view v-if=\"showClear || showPassword || suffixIcon || showWordCount || $slots.suffix\" class=\"wd-input__suffix\">\r\n          <wd-icon v-if=\"showClear\" custom-class=\"wd-input__clear\" name=\"error-fill\" @click=\"handleClear\" />\r\n          <wd-icon v-if=\"showPassword\" custom-class=\"wd-input__icon\" :name=\"isPwdVisible ? 'view' : 'eye-close'\" @click=\"togglePwdVisible\" />\r\n          <view v-if=\"showWordCount\" class=\"wd-input__count\">\r\n            <text\r\n              :class=\"[\r\n              inputValue && String(inputValue).length > 0 ? 'wd-input__count-current' : '',\r\n              String(inputValue).length > maxlength! ? 'is-error' : ''\r\n            ]\"\r\n            >\r\n              {{ String(inputValue).length }}\r\n            </text>\r\n            /{{ maxlength }}\r\n          </view>\r\n          <wd-icon v-if=\"suffixIcon && !$slots.suffix\" custom-class=\"wd-input__icon\" :name=\"suffixIcon\" @click=\"onClickSuffixIcon\" />\r\n          <slot v-else name=\"suffix\"></slot>\r\n        </view>\r\n      </view>\r\n      <view v-if=\"errorMessage\" class=\"wd-input__error-message\">{{ errorMessage }}</view>\r\n    </view>\r\n  </view>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nexport default {\r\n  name: 'wd-input',\r\n  options: {\r\n    virtualHost: true,\r\n    addGlobalClass: true,\r\n    styleIsolation: 'shared'\r\n  }\r\n}\r\n</script>\r\n\r\n<script lang=\"ts\" setup>\r\nimport { computed, ref, watch, useSlots, type Slots } from 'vue'\r\nimport wdIcon from '../wd-icon/wd-icon.vue'\r\nimport { isDef, objToStyle, pause, isEqual } from '../common/util'\r\nimport { useCell } from '../composables/useCell'\r\nimport { FORM_KEY, type FormItemRule } from '../wd-form/types'\r\nimport { useParent } from '../composables/useParent'\r\nimport { useTranslate } from '../composables/useTranslate'\r\nimport { inputProps } from './types'\r\n\r\ninterface InputSlots extends Slots {\r\n  prefix?: () => any\r\n  suffix?: () => any\r\n  label?: () => any\r\n}\r\n\r\nconst props = defineProps(inputProps)\r\nconst emit = defineEmits([\r\n  'update:modelValue',\r\n  'clear',\r\n  'blur',\r\n  'focus',\r\n  'input',\r\n  'keyboardheightchange',\r\n  'confirm',\r\n  'clicksuffixicon',\r\n  'clickprefixicon',\r\n  'click'\r\n])\r\nconst slots = useSlots() as InputSlots\r\nconst { translate } = useTranslate('input')\r\n\r\nconst isPwdVisible = ref<boolean>(false)\r\nconst clearing = ref<boolean>(false) // 是否正在清空操作，避免重复触发失焦\r\nconst focused = ref<boolean>(false) // 控制聚焦\r\nconst focusing = ref<boolean>(false) // 当前是否激活状态\r\nconst inputValue = ref<string | number>(getInitValue()) // 输入框的值\r\nconst cell = useCell()\r\n\r\nwatch(\r\n  () => props.focus,\r\n  (newValue) => {\r\n    focused.value = newValue\r\n  },\r\n  { immediate: true, deep: true }\r\n)\r\n\r\nwatch(\r\n  () => props.modelValue,\r\n  (newValue) => {\r\n    inputValue.value = isDef(newValue) ? String(newValue) : ''\r\n  }\r\n)\r\n\r\nconst { parent: form } = useParent(FORM_KEY)\r\n\r\nconst placeholderValue = computed(() => {\r\n  return isDef(props.placeholder) ? props.placeholder : translate('placeholder')\r\n})\r\n\r\n/**\r\n * 展示清空按钮\r\n */\r\nconst showClear = computed(() => {\r\n  const { disabled, readonly, clearable, clearTrigger } = props\r\n  if (clearable && !readonly && !disabled && inputValue.value && (clearTrigger === 'always' || (props.clearTrigger === 'focus' && focusing.value))) {\r\n    return true\r\n  } else {\r\n    return false\r\n  }\r\n})\r\n\r\n/**\r\n * 展示字数统计\r\n */\r\nconst showWordCount = computed(() => {\r\n  const { disabled, readonly, maxlength, showWordLimit } = props\r\n  return Boolean(!disabled && !readonly && isDef(maxlength) && maxlength > -1 && showWordLimit)\r\n})\r\n\r\n/**\r\n * 表单错误提示信息\r\n */\r\nconst errorMessage = computed(() => {\r\n  if (form && props.prop && form.errorMessages && form.errorMessages[props.prop]) {\r\n    return form.errorMessages[props.prop]\r\n  } else {\r\n    return ''\r\n  }\r\n})\r\n\r\n// 是否展示必填\r\nconst isRequired = computed(() => {\r\n  let formRequired = false\r\n  if (form && form.props.rules) {\r\n    const rules = form.props.rules\r\n    for (const key in rules) {\r\n      if (Object.prototype.hasOwnProperty.call(rules, key) && key === props.prop && Array.isArray(rules[key])) {\r\n        formRequired = rules[key].some((rule: FormItemRule) => rule.required)\r\n      }\r\n    }\r\n  }\r\n  return props.required || props.rules.some((rule) => rule.required) || formRequired\r\n})\r\n\r\nconst rootClass = computed(() => {\r\n  return `wd-input  ${props.label || slots.label ? 'is-cell' : ''} ${props.center ? 'is-center' : ''} ${cell.border.value ? 'is-border' : ''} ${\r\n    props.size ? 'is-' + props.size : ''\r\n  } ${props.error ? 'is-error' : ''} ${props.disabled ? 'is-disabled' : ''}  ${\r\n    inputValue.value && String(inputValue.value).length > 0 ? 'is-not-empty' : ''\r\n  }  ${props.noBorder ? 'is-no-border' : ''} ${props.customClass}`\r\n})\r\n\r\nconst labelClass = computed(() => {\r\n  return `wd-input__label ${props.customLabelClass} ${isRequired.value ? 'is-required' : ''}`\r\n})\r\n\r\nconst inputPlaceholderClass = computed(() => {\r\n  return `wd-input__placeholder  ${props.placeholderClass}`\r\n})\r\n\r\nconst labelStyle = computed(() => {\r\n  return props.labelWidth\r\n    ? objToStyle({\r\n        'min-width': props.labelWidth,\r\n        'max-width': props.labelWidth\r\n      })\r\n    : ''\r\n})\r\n\r\n// 状态初始化\r\nfunction getInitValue() {\r\n  const formatted = formatValue(props.modelValue)\r\n  if (!isValueEqual(formatted, props.modelValue)) {\r\n    emit('update:modelValue', formatted)\r\n  }\r\n  return formatted\r\n}\r\n\r\nfunction formatValue(value: string | number) {\r\n  const { maxlength } = props\r\n  if (isDef(maxlength) && maxlength !== -1 && String(value).length > maxlength) {\r\n    return value.toString().slice(0, maxlength)\r\n  }\r\n  return value\r\n}\r\n\r\nfunction togglePwdVisible() {\r\n  isPwdVisible.value = !isPwdVisible.value\r\n}\r\nasync function handleClear() {\r\n  focusing.value = false\r\n  inputValue.value = ''\r\n  if (props.focusWhenClear) {\r\n    clearing.value = true\r\n    focused.value = false\r\n  }\r\n  await pause()\r\n  if (props.focusWhenClear) {\r\n    focused.value = true\r\n    focusing.value = true\r\n  }\r\n  emit('update:modelValue', inputValue.value)\r\n  emit('clear')\r\n}\r\nasync function handleBlur() {\r\n  // 等待150毫秒，clear执行完毕\r\n  await pause(150)\r\n  if (clearing.value) {\r\n    clearing.value = false\r\n    return\r\n  }\r\n  focusing.value = false\r\n  emit('blur', {\r\n    value: inputValue.value\r\n  })\r\n}\r\nfunction handleFocus({ detail }: any) {\r\n  focusing.value = true\r\n  emit('focus', detail)\r\n}\r\nfunction handleInput({ detail }: any) {\r\n  emit('update:modelValue', inputValue.value)\r\n  emit('input', detail)\r\n}\r\nfunction handleKeyboardheightchange({ detail }: any) {\r\n  emit('keyboardheightchange', detail)\r\n}\r\nfunction handleConfirm({ detail }: any) {\r\n  emit('confirm', detail)\r\n}\r\nfunction onClickSuffixIcon() {\r\n  emit('clicksuffixicon')\r\n}\r\nfunction onClickPrefixIcon() {\r\n  emit('clickprefixicon')\r\n}\r\nfunction handleClick(event: MouseEvent) {\r\n  emit('click', event)\r\n}\r\nfunction isValueEqual(value1: number | string, value2: number | string) {\r\n  return isEqual(String(value1), String(value2))\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n@import './index.scss';\r\n</style>\r\n<style lang=\"scss\">\r\n@import './placeholder.scss';\r\n</style>\r\n","import Component from 'F:/yunsoo_mobile/uni_modules/wot-design-uni/components/wd-input/wd-input.vue'\nwx.createComponent(Component)"],"names":["useSlots","useTranslate","ref","useCell","watch","isDef","useParent","FORM_KEY","computed","objToStyle","pause","isEqual"],"mappings":"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"}