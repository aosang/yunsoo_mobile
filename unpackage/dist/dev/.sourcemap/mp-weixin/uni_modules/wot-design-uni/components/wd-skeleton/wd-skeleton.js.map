{"version":3,"file":"wd-skeleton.js","sources":["uni_modules/wot-design-uni/components/wd-skeleton/wd-skeleton.vue","D:/software/HBuilderX/plugins/uniapp-cli-vite/uniComponent:/RjoveXVuc29vX21vYmlsZS91bmlfbW9kdWxlcy93b3QtZGVzaWduLXVuaS9jb21wb25lbnRzL3dkLXNrZWxldG9uL3dkLXNrZWxldG9uLnZ1ZQ"],"sourcesContent":["<!--\r\n * @Author: weisheng\r\n * @Date: 2024-03-15 11:36:12\r\n * @LastEditTime: 2024-04-01 20:24:22\r\n * @LastEditors: weisheng\r\n * @Description: \r\n * @FilePath: /wot-design-uni/src/uni_modules/wot-design-uni/components/wd-skeleton/wd-skeleton.vue\r\n * 记得注释\r\n-->\r\n<template>\r\n  <view :class=\"`wd-skeleton ${customClass}`\" :style=\"customStyle\">\r\n    <view class=\"wd-skeleton__content\" v-if=\"show\">\r\n      <view class=\"wd-skeleton__row\" v-for=\"(row, index) of parsedRowCols\" :key=\"`row-${index}`\">\r\n        <view v-for=\"(col, idx) of row\" :key=\"`col-${idx}`\" :class=\"col.class\" :style=\"col.style\" />\r\n      </view>\r\n    </view>\r\n    <view v-else>\r\n      <slot />\r\n    </view>\r\n  </view>\r\n</template>\r\n<script lang=\"ts\">\r\nexport default {\r\n\r\n\r\n\r\n  options: { virtualHost: true, addGlobalClass: true, styleIsolation: 'shared' }\r\n}\r\n</script>\r\n\r\n<script lang=\"ts\" setup>\r\nimport type { CSSProperties } from 'vue'\r\nimport { ref, computed, watch } from 'vue'\r\nimport type { SkeletonRowCol, SkeletonRowColObj } from './types'\r\nimport { skeletonProps } from './types'\r\nimport { isNumber, addUnit } from '../common/util'\r\n\r\nconst themeMap = {\r\n  avatar: [{ type: 'circle', height: '64px', width: '64px' }],\r\n  image: [{ type: 'rect', height: '64px', width: '64px' }],\r\n  text: [\r\n    1,\r\n    [\r\n      { width: '24%', height: '16px', marginRight: '16px' },\r\n      { width: '76%', height: '16px' }\r\n    ]\r\n  ],\r\n  paragraph: [1, 1, 1, { width: '55%' }]\r\n}\r\nconst props = defineProps(skeletonProps)\r\nconst rowCols = ref<SkeletonRowCol[]>([])\r\n\r\nconst parsedRowCols = computed(() => {\r\n  return rowCols.value.map((item) => {\r\n    if (isNumber(item)) {\r\n      return [\r\n        {\r\n          class: getColItemClass({ type: 'text' }),\r\n          style: {}\r\n        }\r\n      ]\r\n    }\r\n    if (Array.isArray(item)) {\r\n      return item.map((col) => {\r\n        return {\r\n          ...col,\r\n          class: getColItemClass(col),\r\n          style: getColItemStyle(col)\r\n        }\r\n      })\r\n    }\r\n    const nItem = item as SkeletonRowColObj\r\n\r\n    return [\r\n      {\r\n        ...nItem,\r\n        class: getColItemClass(nItem),\r\n        style: getColItemStyle(nItem)\r\n      }\r\n    ]\r\n  })\r\n})\r\n\r\nfunction getColItemClass(rowCol: SkeletonRowColObj) {\r\n  return ['wd-skeleton__col', `wd-skeleton--type-${rowCol.type || 'text'}`, { [`wd-skeleton--animation-${props.animation}`]: props.animation }]\r\n}\r\nfunction getColItemStyle(rowCol: SkeletonRowColObj) {\r\n  const style: CSSProperties = {}\r\n  const styleName = ['size', 'width', 'height', 'margin', 'background', 'marginLeft', 'marginRight', 'borderRadius', 'backgroundColor']\r\n\r\n  for (const name of styleName) {\r\n    if (Object.prototype.hasOwnProperty.call(rowCol, name)) {\r\n      const px = addUnit(rowCol[name])\r\n\r\n      if (name === 'size') {\r\n        style.width = px\r\n        style.height = px\r\n      } else {\r\n        ;(style as any)[name] = px\r\n      }\r\n    }\r\n  }\r\n  return style\r\n}\r\n\r\nwatch(\r\n  () => props.rowCol,\r\n  (rowCol) => {\r\n    rowCols.value = [...(Array.isArray(rowCol) && rowCol.length ? props.rowCol : themeMap[props.theme])]\r\n  },\r\n  { immediate: true }\r\n)\r\n\r\nconst show = computed(() => props.loading == undefined || props.loading === true)\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n@import './index.scss';\r\n</style>\r\n","import Component from 'F:/yunsoo_mobile/uni_modules/wot-design-uni/components/wd-skeleton/wd-skeleton.vue'\nwx.createComponent(Component)"],"names":["ref","computed","isNumber","addUnit","watch"],"mappings":";;;;AAsBA,MAAA,cAAe;AAAA,EAIb,SAAS,EAAE,aAAa,MAAM,gBAAgB,MAAM,gBAAgB,SAAS;AAC/E;;;;;;AAUA,UAAM,WAAW;AAAA,MACf,QAAQ,CAAC,EAAE,MAAM,UAAU,QAAQ,QAAQ,OAAO,QAAQ;AAAA,MAC1D,OAAO,CAAC,EAAE,MAAM,QAAQ,QAAQ,QAAQ,OAAO,QAAQ;AAAA,MACvD,MAAM;AAAA,QACJ;AAAA,QACA;AAAA,UACE,EAAE,OAAO,OAAO,QAAQ,QAAQ,aAAa,OAAO;AAAA,UACpD,EAAE,OAAO,OAAO,QAAQ,OAAO;AAAA,QACjC;AAAA,MACF;AAAA,MACA,WAAW,CAAC,GAAG,GAAG,GAAG,EAAE,OAAO,OAAO;AAAA,IAAA;AAEvC,UAAM,QAAQ;AACR,UAAA,UAAUA,kBAAsB,CAAA,CAAE;AAElC,UAAA,gBAAgBC,cAAAA,SAAS,MAAM;AACnC,aAAO,QAAQ,MAAM,IAAI,CAAC,SAAS;AAC7B,YAAAC,gDAAAA,SAAS,IAAI,GAAG;AACX,iBAAA;AAAA,YACL;AAAA,cACE,OAAO,gBAAgB,EAAE,MAAM,QAAQ;AAAA,cACvC,OAAO,CAAC;AAAA,YACV;AAAA,UAAA;AAAA,QAEJ;AACI,YAAA,MAAM,QAAQ,IAAI,GAAG;AAChB,iBAAA,KAAK,IAAI,CAAC,QAAQ;AAChB,mBAAA;AAAA,cACL,GAAG;AAAA,cACH,OAAO,gBAAgB,GAAG;AAAA,cAC1B,OAAO,gBAAgB,GAAG;AAAA,YAAA;AAAA,UAC5B,CACD;AAAA,QACH;AACA,cAAM,QAAQ;AAEP,eAAA;AAAA,UACL;AAAA,YACE,GAAG;AAAA,YACH,OAAO,gBAAgB,KAAK;AAAA,YAC5B,OAAO,gBAAgB,KAAK;AAAA,UAC9B;AAAA,QAAA;AAAA,MACF,CACD;AAAA,IAAA,CACF;AAED,aAAS,gBAAgB,QAA2B;AAClD,aAAO,CAAC,oBAAoB,qBAAqB,OAAO,QAAQ,MAAM,IAAI,EAAE,CAAC,0BAA0B,MAAM,SAAS,EAAE,GAAG,MAAM,WAAW;AAAA,IAC9I;AACA,aAAS,gBAAgB,QAA2B;AAClD,YAAM,QAAuB,CAAA;AACvB,YAAA,YAAY,CAAC,QAAQ,SAAS,UAAU,UAAU,cAAc,cAAc,eAAe,gBAAgB,iBAAiB;AAEpI,iBAAW,QAAQ,WAAW;AAC5B,YAAI,OAAO,UAAU,eAAe,KAAK,QAAQ,IAAI,GAAG;AACtD,gBAAM,KAAKC,gDAAA,QAAQ,OAAO,IAAI,CAAC;AAE/B,cAAI,SAAS,QAAQ;AACnB,kBAAM,QAAQ;AACd,kBAAM,SAAS;AAAA,UAAA,OACV;AACH,kBAAc,IAAI,IAAI;AAAA,UAC1B;AAAA,QACF;AAAA,MACF;AACO,aAAA;AAAA,IACT;AAEAC,kBAAA;AAAA,MACE,MAAM,MAAM;AAAA,MACZ,CAAC,WAAW;AACV,gBAAQ,QAAQ,CAAC,GAAI,MAAM,QAAQ,MAAM,KAAK,OAAO,SAAS,MAAM,SAAS,SAAS,MAAM,KAAK,CAAE;AAAA,MACrG;AAAA,MACA,EAAE,WAAW,KAAK;AAAA,IAAA;AAGd,UAAA,OAAOH,uBAAS,MAAM,MAAM,WAAW,UAAa,MAAM,YAAY,IAAI;;;;;;;;;;;;;;;;;;;;;;;;;AChHhF,GAAG,gBAAgB,SAAS;"}