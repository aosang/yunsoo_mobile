{"version":3,"file":"types.js","sources":["uni_modules/wot-design-uni/components/wd-toast/types.ts"],"sourcesContent":["/*\r\n * @Author: weisheng\r\n * @Date: 2023-06-19 12:47:57\r\n * @LastEditTime: 2025-02-16 15:52:17\r\n * @LastEditors: weisheng\r\n * @Description:\r\n * @FilePath: /wot-design-uni/src/uni_modules/wot-design-uni/components/wd-toast/types.ts\r\n * 记得注释\r\n */\r\nimport type { ExtractPropTypes, PropType } from 'vue'\r\nimport { baseProps, makeStringProp } from '../common/props'\r\nimport type { LoadingType } from '../wd-loading/types'\r\n\r\nexport type ToastIconType = 'success' | 'error' | 'warning' | 'loading' | 'info' // 图标类型\r\n\r\nexport type ToastPositionType = 'top' | 'middle-top' | 'middle' | 'bottom' // 提示信息框的位置类型\r\n\r\nexport type ToastDirection = 'vertical' | 'horizontal' // 提示信息框的排列方向\r\n\r\nexport type ToastLoadingType = LoadingType // 提示信息加载状态类型\r\n\r\nexport type ToastOptions = {\r\n  msg?: string\r\n  duration?: number\r\n  direction?: ToastDirection\r\n  iconName?: ToastIconType\r\n  iconSize?: number\r\n  loadingType?: ToastLoadingType\r\n  loadingColor?: string\r\n  loadingSize?: number\r\n  iconColor?: string\r\n  position?: ToastPositionType\r\n  show?: boolean\r\n  zIndex?: number\r\n  /**\r\n   * 是否存在遮罩层\r\n   */\r\n  cover?: boolean\r\n  /**\r\n   * 图标类名\r\n   */\r\n  iconClass?: string\r\n  /**\r\n   * 类名前缀，用于使用自定义图标\r\n   */\r\n  classPrefix?: string\r\n  /**\r\n   * 完全展示后的回调函数\r\n   */\r\n  opened?: () => void\r\n  /**\r\n   * 完全关闭时的回调函数\r\n   */\r\n  closed?: () => void\r\n}\r\n\r\nexport interface Toast {\r\n  // 打开Toast\r\n  show(toastOptions: ToastOptions | string): void\r\n  // 成功提示\r\n  success(toastOptions: ToastOptions | string): void\r\n  // 关闭提示\r\n  error(toastOptions: ToastOptions | string): void\r\n  // 常规提示\r\n  info(toastOptions: ToastOptions | string): void\r\n  // 警告提示\r\n  warning(toastOptions: ToastOptions | string): void\r\n  // 加载提示\r\n  loading(toastOptions: ToastOptions | string): void\r\n  // 关闭Toast\r\n  close(): void\r\n}\r\n\r\nexport const toastProps = {\r\n  ...baseProps,\r\n  /**\r\n   * 选择器\r\n   * @type {string}\r\n   * @default ''\r\n   */\r\n  selector: makeStringProp(''),\r\n  /**\r\n   * 提示信息\r\n   * @type {string}\r\n   * @default ''\r\n   */\r\n  msg: {\r\n    type: String,\r\n    default: ''\r\n  },\r\n  /**\r\n   * 排列方向\r\n   * @type {'vertical' | 'horizontal'}\r\n   * @default 'horizontal'\r\n   */\r\n  direction: makeStringProp<ToastDirection>('horizontal'),\r\n  /**\r\n   * 图标名称\r\n   * @type {'success' | 'error' | 'warning' | 'loading' | 'info'}\r\n   * @default ''\r\n   */\r\n  iconName: {\r\n    type: String as PropType<ToastIconType>,\r\n    default: ''\r\n  },\r\n  /**\r\n   * 图标大小\r\n   * @type {number}\r\n   */\r\n  iconSize: Number,\r\n  /**\r\n   * 加载类型\r\n   * @type {'outline' | 'ring'}\r\n   * @default 'outline'\r\n   */\r\n  loadingType: makeStringProp<ToastLoadingType>('outline'),\r\n  /**\r\n   * 加载颜色\r\n   * @type {string}\r\n   * @default '#4D80F0'\r\n   */\r\n  loadingColor: {\r\n    type: String,\r\n    default: '#4D80F0'\r\n  },\r\n  /**\r\n   * 加载大小\r\n   * @type {number}\r\n   */\r\n  loadingSize: Number,\r\n  /**\r\n   * 图标颜色\r\n   * @type {string}\r\n   */\r\n  iconColor: String,\r\n  /**\r\n   * 位置\r\n   * @type {'top' | 'middle-top' | 'middle' | 'bottom'}\r\n   * @default 'middle-top'\r\n   */\r\n  position: makeStringProp<ToastPositionType>('middle-top'),\r\n  /**\r\n   * 层级\r\n   * @type {number}\r\n   * @default 100\r\n   */\r\n  zIndex: {\r\n    type: Number,\r\n    default: 100\r\n  },\r\n  /**\r\n   * 是否存在遮罩层\r\n   * @type {boolean}\r\n   * @default false\r\n   */\r\n  cover: {\r\n    type: Boolean,\r\n    default: false\r\n  },\r\n  /**\r\n   * 图标类名\r\n   * @type {string}\r\n   * @default ''\r\n   */\r\n  iconClass: {\r\n    type: String,\r\n    default: ''\r\n  },\r\n  /**\r\n   * 类名前缀\r\n   * @type {string}\r\n   * @default 'wd-icon'\r\n   */\r\n  classPrefix: {\r\n    type: String,\r\n    default: 'wd-icon'\r\n  },\r\n  /**\r\n   * 完全展示后的回调函数\r\n   * @type {Function}\r\n   */\r\n  opened: Function as PropType<() => void>,\r\n  /**\r\n   * 完全关闭时的回调函数\r\n   * @type {Function}\r\n   */\r\n  closed: Function as PropType<() => void>\r\n}\r\n\r\nexport type ToastProps = ExtractPropTypes<typeof toastProps>\r\n"],"names":["baseProps","makeStringProp"],"mappings":";;AAyEO,MAAM,aAAa;AAAA,EACxB,GAAGA,iDAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMH,UAAUC,gEAAe,EAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAM3B,KAAK;AAAA,IACH,MAAM;AAAA,IACN,SAAS;AAAA,EACX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,WAAWA,gEAA+B,YAAY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMtD,UAAU;AAAA,IACR,MAAM;AAAA,IACN,SAAS;AAAA,EACX;AAAA;AAAA;AAAA;AAAA;AAAA,EAKA,UAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMV,aAAaA,gEAAiC,SAAS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMvD,cAAc;AAAA,IACZ,MAAM;AAAA,IACN,SAAS;AAAA,EACX;AAAA;AAAA;AAAA;AAAA;AAAA,EAKA,aAAa;AAAA;AAAA;AAAA;AAAA;AAAA,EAKb,WAAW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMX,UAAUA,gEAAkC,YAAY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMxD,QAAQ;AAAA,IACN,MAAM;AAAA,IACN,SAAS;AAAA,EACX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,OAAO;AAAA,IACL,MAAM;AAAA,IACN,SAAS;AAAA,EACX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,WAAW;AAAA,IACT,MAAM;AAAA,IACN,SAAS;AAAA,EACX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,aAAa;AAAA,IACX,MAAM;AAAA,IACN,SAAS;AAAA,EACX;AAAA;AAAA;AAAA;AAAA;AAAA,EAKA,QAAQ;AAAA;AAAA;AAAA;AAAA;AAAA,EAKR,QAAQ;AACV;;"}