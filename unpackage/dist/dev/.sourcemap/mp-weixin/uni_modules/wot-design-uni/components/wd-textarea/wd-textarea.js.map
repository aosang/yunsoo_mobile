{"version":3,"file":"wd-textarea.js","sources":["uni_modules/wot-design-uni/components/wd-textarea/wd-textarea.vue","D:/software/HBuilderX/plugins/uniapp-cli-vite/uniComponent:/RjoveXVuc29vX21vYmlsZS91bmlfbW9kdWxlcy93b3QtZGVzaWduLXVuaS9jb21wb25lbnRzL3dkLXRleHRhcmVhL3dkLXRleHRhcmVhLnZ1ZQ"],"sourcesContent":["<template>\r\n  <view :class=\"rootClass\" :style=\"customStyle\">\r\n    <view v-if=\"label || $slots.label\" :class=\"labelClass\" :style=\"labelStyle\">\r\n      <view v-if=\"prefixIcon || $slots.prefix\" class=\"wd-textarea__prefix\">\r\n        <wd-icon v-if=\"prefixIcon && !$slots.prefix\" custom-class=\"wd-textarea__icon\" :name=\"prefixIcon\" @click=\"onClickPrefixIcon\" />\r\n        <slot v-else name=\"prefix\"></slot>\r\n      </view>\r\n      <view class=\"wd-textarea__label-inner\">\r\n        <text v-if=\"label && !$slots.label\">{{ label }}</text>\r\n        <slot v-else name=\"label\"></slot>\r\n      </view>\r\n    </view>\r\n\r\n    <!-- 文本域 -->\r\n    <view :class=\"`wd-textarea__value ${showClear ? 'is-suffix' : ''} ${customTextareaContainerClass} ${showWordCount ? 'is-show-limit' : ''}`\">\r\n      <textarea\r\n        :class=\"`wd-textarea__inner ${customTextareaClass}`\"\r\n        v-model=\"inputValue\"\r\n        :show-count=\"false\"\r\n        :placeholder=\"placeholderValue\"\r\n        :disabled=\"disabled || readonly\"\r\n        :maxlength=\"maxlength\"\r\n        :focus=\"focused\"\r\n        :auto-focus=\"autoFocus\"\r\n        :placeholder-style=\"placeholderStyle\"\r\n        :placeholder-class=\"inputPlaceholderClass\"\r\n        :auto-height=\"autoHeight\"\r\n        :cursor-spacing=\"cursorSpacing\"\r\n        :fixed=\"fixed\"\r\n        :cursor=\"cursor\"\r\n        :show-confirm-bar=\"showConfirmBar\"\r\n        :selection-start=\"selectionStart\"\r\n        :selection-end=\"selectionEnd\"\r\n        :adjust-position=\"adjustPosition\"\r\n        :hold-keyboard=\"holdKeyboard\"\r\n        :confirm-type=\"confirmType\"\r\n        :confirm-hold=\"confirmHold\"\r\n        :disable-default-padding=\"disableDefaultPadding\"\r\n        :ignoreCompositionEvent=\"ignoreCompositionEvent\"\r\n        :inputmode=\"inputmode\"\r\n        @input=\"handleInput\"\r\n        @focus=\"handleFocus\"\r\n        @blur=\"handleBlur\"\r\n        @confirm=\"handleConfirm\"\r\n        @linechange=\"handleLineChange\"\r\n        @keyboardheightchange=\"handleKeyboardheightchange\"\r\n      />\r\n      <view v-if=\"errorMessage\" class=\"wd-textarea__error-message\">{{ errorMessage }}</view>\r\n\r\n      <view v-if=\"props.readonly\" class=\"wd-textarea__readonly-mask\" />\r\n      <view class=\"wd-textarea__suffix\">\r\n        <wd-icon v-if=\"showClear\" custom-class=\"wd-textarea__clear\" name=\"error-fill\" @click=\"handleClear\" />\r\n        <view v-if=\"showWordCount\" class=\"wd-textarea__count\">\r\n          <text :class=\"countClass\">\r\n            {{ currentLength }}\r\n          </text>\r\n          /{{ maxlength }}\r\n        </view>\r\n      </view>\r\n    </view>\r\n  </view>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nexport default {\r\n  name: 'wd-textarea',\r\n  options: {\r\n    virtualHost: true,\r\n    addGlobalClass: true,\r\n    styleIsolation: 'shared'\r\n  }\r\n}\r\n</script>\r\n\r\n<script lang=\"ts\" setup>\r\nimport { computed, onBeforeMount, ref, watch, useSlots, type Slots } from 'vue'\r\nimport wdIcon from '../wd-icon/wd-icon.vue'\r\nimport { objToStyle, isDef, pause } from '../common/util'\r\nimport { useCell } from '../composables/useCell'\r\nimport { FORM_KEY, type FormItemRule } from '../wd-form/types'\r\nimport { useParent } from '../composables/useParent'\r\nimport { useTranslate } from '../composables/useTranslate'\r\nimport { textareaProps } from './types'\r\n\r\ninterface TextareaSlots extends Slots {\r\n  prefix?: () => any\r\n  label?: () => any\r\n}\r\n\r\nconst { translate } = useTranslate('textarea')\r\n\r\nconst props = defineProps(textareaProps)\r\nconst emit = defineEmits([\r\n  'update:modelValue',\r\n  'clear',\r\n  'blur',\r\n  'focus',\r\n  'input',\r\n  'keyboardheightchange',\r\n  'confirm',\r\n  'linechange',\r\n  'clickprefixicon',\r\n  'click'\r\n])\r\nconst slots = useSlots() as TextareaSlots\r\n\r\nconst placeholderValue = computed(() => {\r\n  return isDef(props.placeholder) ? props.placeholder : translate('placeholder')\r\n})\r\n\r\nconst clearing = ref<boolean>(false)\r\nconst focused = ref<boolean>(false) // 控制聚焦\r\nconst focusing = ref<boolean>(false) // 当前是否激活状态\r\nconst inputValue = ref<string>('') // 输入框的值\r\nconst cell = useCell()\r\n\r\nwatch(\r\n  () => props.focus,\r\n  (newValue) => {\r\n    focused.value = newValue\r\n  },\r\n  { immediate: true, deep: true }\r\n)\r\n\r\nwatch(\r\n  () => props.modelValue,\r\n  (newValue) => {\r\n    inputValue.value = isDef(newValue) ? String(newValue) : ''\r\n  },\r\n  { immediate: true, deep: true }\r\n)\r\n\r\nconst { parent: form } = useParent(FORM_KEY)\r\n\r\n/**\r\n * 展示清空按钮\r\n */\r\nconst showClear = computed(() => {\r\n  const { disabled, readonly, clearable, clearTrigger } = props\r\n  if (clearable && !readonly && !disabled && inputValue.value && (clearTrigger === 'always' || (props.clearTrigger === 'focus' && focusing.value))) {\r\n    return true\r\n  } else {\r\n    return false\r\n  }\r\n})\r\n\r\n/**\r\n * 展示字数统计\r\n */\r\nconst showWordCount = computed(() => {\r\n  const { disabled, readonly, maxlength, showWordLimit } = props\r\n  return Boolean(!disabled && !readonly && isDef(maxlength) && maxlength > -1 && showWordLimit)\r\n})\r\n\r\n// 表单校验错误信息\r\nconst errorMessage = computed(() => {\r\n  if (form && props.prop && form.errorMessages && form.errorMessages[props.prop]) {\r\n    return form.errorMessages[props.prop]\r\n  } else {\r\n    return ''\r\n  }\r\n})\r\n\r\n// 是否展示必填\r\nconst isRequired = computed(() => {\r\n  let formRequired = false\r\n  if (form && form.props.rules) {\r\n    const rules = form.props.rules\r\n    for (const key in rules) {\r\n      if (Object.prototype.hasOwnProperty.call(rules, key) && key === props.prop && Array.isArray(rules[key])) {\r\n        formRequired = rules[key].some((rule: FormItemRule) => rule.required)\r\n      }\r\n    }\r\n  }\r\n  return props.required || props.rules.some((rule) => rule.required) || formRequired\r\n})\r\n\r\n// 当前文本域文字长度\r\nconst currentLength = computed(() => {\r\n  /**\r\n   * 使用Array.from处理多码元字符以获取正确的长度\r\n   * @link https://github.com/Moonofweisheng/wot-design-uni/issues/933\r\n   */\r\n  return Array.from(String(formatValue(props.modelValue))).length\r\n})\r\n\r\nconst rootClass = computed(() => {\r\n  return `wd-textarea   ${props.label || slots.label ? 'is-cell' : ''} ${props.center ? 'is-center' : ''} ${cell.border.value ? 'is-border' : ''} ${\r\n    props.size ? 'is-' + props.size : ''\r\n  } ${props.error ? 'is-error' : ''} ${props.disabled ? 'is-disabled' : ''} ${props.autoHeight ? 'is-auto-height' : ''} ${\r\n    currentLength.value > 0 ? 'is-not-empty' : ''\r\n  }  ${props.noBorder ? 'is-no-border' : ''} ${props.customClass}`\r\n})\r\n\r\nconst labelClass = computed(() => {\r\n  return `wd-textarea__label ${props.customLabelClass} ${isRequired.value ? 'is-required' : ''}`\r\n})\r\n\r\nconst inputPlaceholderClass = computed(() => {\r\n  return `wd-textarea__placeholder  ${props.placeholderClass}`\r\n})\r\n\r\nconst countClass = computed(() => {\r\n  return `${currentLength.value > 0 ? 'wd-textarea__count-current' : ''} ${currentLength.value > props.maxlength ? 'is-error' : ''}`\r\n})\r\n\r\nconst labelStyle = computed(() => {\r\n  return props.labelWidth\r\n    ? objToStyle({\r\n        'min-width': props.labelWidth,\r\n        'max-width': props.labelWidth\r\n      })\r\n    : ''\r\n})\r\n\r\nonBeforeMount(() => {\r\n  initState()\r\n})\r\n\r\n// 状态初始化\r\nfunction initState() {\r\n  inputValue.value = formatValue(inputValue.value)\r\n  emit('update:modelValue', inputValue.value)\r\n}\r\n\r\nfunction formatValue(value: string | number) {\r\n  if (value === null || value === undefined) return ''\r\n  const { maxlength, showWordLimit } = props\r\n  if (showWordLimit && maxlength !== -1 && String(value).length > maxlength) {\r\n    return value.toString().substring(0, maxlength)\r\n  }\r\n  return `${value}`\r\n}\r\n\r\nasync function handleClear() {\r\n  focusing.value = false\r\n  inputValue.value = ''\r\n  if (props.focusWhenClear) {\r\n    clearing.value = true\r\n    focused.value = false\r\n  }\r\n  await pause()\r\n  if (props.focusWhenClear) {\r\n    focused.value = true\r\n    focusing.value = true\r\n  }\r\n  emit('update:modelValue', inputValue.value)\r\n  emit('clear')\r\n}\r\nasync function handleBlur({ detail }: any) {\r\n  // 等待150毫秒，clear执行完毕\r\n  await pause(150)\r\n\r\n  if (clearing.value) {\r\n    clearing.value = false\r\n    return\r\n  }\r\n\r\n  focusing.value = false\r\n  emit('blur', {\r\n    value: inputValue.value,\r\n    cursor: detail.cursor ? detail.cursor : null\r\n  })\r\n}\r\nfunction handleFocus({ detail }: any) {\r\n  focusing.value = true\r\n  emit('focus', detail)\r\n}\r\nfunction handleInput({ detail }: any) {\r\n  inputValue.value = formatValue(inputValue.value as string)\r\n  emit('update:modelValue', inputValue.value)\r\n  emit('input', detail)\r\n}\r\nfunction handleKeyboardheightchange({ detail }: any) {\r\n  emit('keyboardheightchange', detail)\r\n}\r\nfunction handleConfirm({ detail }: any) {\r\n  emit('confirm', detail)\r\n}\r\nfunction handleLineChange({ detail }: any) {\r\n  emit('linechange', detail)\r\n}\r\nfunction onClickPrefixIcon() {\r\n  emit('clickprefixicon')\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n@import './index.scss';\r\n</style>\r\n\r\n<style lang=\"scss\">\r\n@import './placeholder.scss';\r\n</style>\r\n","import Component from 'F:/yunsoo_mobile/uni_modules/wot-design-uni/components/wd-textarea/wd-textarea.vue'\nwx.createComponent(Component)"],"names":["useTranslate","useSlots","computed","isDef","ref","useCell","watch","useParent","FORM_KEY","objToStyle","onBeforeMount","pause"],"mappings":"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"}