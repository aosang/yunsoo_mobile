{"version":3,"file":"types.js","sources":["uni_modules/wot-design-uni/components/wd-select-picker/types.ts"],"sourcesContent":["import type { ComponentPublicInstance, ExtractPropTypes, PropType } from 'vue'\r\nimport { baseProps, makeArrayProp, makeBooleanProp, makeNumberProp, makeRequiredProp, makeStringProp } from '../common/props'\r\nimport type { FormItemRule } from '../wd-form/types'\r\n\r\nexport type SelectPickerType = 'checkbox' | 'radio'\r\n\r\nexport const selectPickerProps = {\r\n  ...baseProps,\r\n  /** 选择器左侧文案 */\r\n  label: String,\r\n  /** 设置左侧标题宽度 */\r\n  labelWidth: makeStringProp('33%'),\r\n  /** 禁用 */\r\n  disabled: makeBooleanProp(false),\r\n  /** 只读 */\r\n  readonly: Boolean,\r\n  /** 选择器占位符 */\r\n  placeholder: String,\r\n  /** 弹出层标题 */\r\n  title: String,\r\n  /** 选择器的值靠右展示 */\r\n  alignRight: makeBooleanProp(false),\r\n  /** 是否为错误状态，错误状态时右侧内容为红色 */\r\n  error: makeBooleanProp(false),\r\n  /** 必填样式 */\r\n  required: makeBooleanProp(false),\r\n  /** 使用 label 插槽时设置该选项 */\r\n  useLabelSlot: makeBooleanProp(false),\r\n  /** 使用默认插槽时设置该选项 */\r\n  useDefaultSlot: makeBooleanProp(false),\r\n  /** 设置选择器大小 */\r\n  size: String,\r\n  /** 选中的颜色（单/复选框） */\r\n  checkedColor: String,\r\n  /** 最小选中的数量（仅在复选框类型下生效，`type`类型为`checkbox`） */\r\n  min: makeNumberProp(0),\r\n  /** 最大选中的数量，0 为无限数量，默认为 0（仅在复选框类型下生效，`type`类型为`checkbox`） */\r\n  max: makeNumberProp(0),\r\n  /** 设置 picker 内部的选项组尺寸大小 （单/复选框） */\r\n  selectSize: String,\r\n  /** 加载中 */\r\n  loading: makeBooleanProp(false),\r\n  /** 加载的颜色，只能使用十六进制的色值写法，且不能使用缩写 */\r\n  loadingColor: makeStringProp('#4D80F0'),\r\n  /** 点击遮罩是否关闭 */\r\n  closeOnClickModal: makeBooleanProp(true),\r\n  /** 选中项，`type`类型为`checkbox`时，类型为 array；`type`为`radio` 时 ，类型为 number / boolean / string */\r\n  modelValue: makeRequiredProp([String, Number, Boolean, Array] as PropType<string | number | boolean | (string | number | boolean)[]>),\r\n  /** 选择器数据，一维数组 */\r\n  columns: makeArrayProp<Record<string, any>>(),\r\n  /** 单复选选择器类型 */\r\n  type: makeStringProp<SelectPickerType>('checkbox'),\r\n  /** 选项对象中，value 对应的 key */\r\n  valueKey: makeStringProp('value'),\r\n  /** 选项对象中，展示的文本对应的 key */\r\n  labelKey: makeStringProp('label'),\r\n  /** 确认按钮文案 */\r\n  confirmButtonText: String,\r\n  /** 自定义展示文案的格式化函数，返回一个字符串 */\r\n  displayFormat: Function as PropType<SelectPickerDisplayFormat>,\r\n  /** 确定前校验函数，接收 (value, resolve) 参数，通过 resolve 继续执行 picker，resolve 接收 1 个 boolean 参数 */\r\n  beforeConfirm: Function as PropType<SelectPickerBeforeConfirm>,\r\n  /** 弹窗层级 */\r\n  zIndex: makeNumberProp(15),\r\n  /** 弹出面板是否设置底部安全距离（iphone X 类型的机型） */\r\n  safeAreaInsetBottom: makeBooleanProp(true),\r\n  /** 可搜索（目前只支持本地搜索） */\r\n  filterable: makeBooleanProp(false),\r\n  /** 搜索框占位符 */\r\n  filterPlaceholder: String,\r\n  /** 是否超出隐藏 */\r\n  ellipsis: makeBooleanProp(false),\r\n  /** 重新打开是否滚动到选中项 */\r\n  scrollIntoView: makeBooleanProp(true),\r\n  /** 表单域 `model` 字段名，在使用表单校验功能的情况下，该属性是必填的 */\r\n  prop: String,\r\n  /** 表单验证规则，结合`wd-form`组件使用 */\r\n  rules: makeArrayProp<FormItemRule>(),\r\n  /** 自定义内容样式类 */\r\n  customContentClass: makeStringProp(''),\r\n  /** 自定义标签样式类 */\r\n  customLabelClass: makeStringProp(''),\r\n  /** 自定义值样式类 */\r\n  customValueClass: makeStringProp(''),\r\n  /** 是否显示确认按钮（radio类型生效），默认值为：true */\r\n  showConfirm: makeBooleanProp(true),\r\n  /**\r\n   * 显示清空按钮\r\n   */\r\n  clearable: makeBooleanProp(false)\r\n}\r\nexport type SelectPickerProps = ExtractPropTypes<typeof selectPickerProps>\r\n\r\nexport type SelectPickerDisplayFormat = (items: string | number | boolean | (string | number | boolean)[], columns: Record<string, any>[]) => string\r\n\r\nexport type SelectPickerBeforeConfirm = (value: string | number | boolean | (string | number | boolean)[], resolve: (isPass: boolean) => void) => void\r\n\r\nexport type SelectPickerExpose = {\r\n  // 打开picker弹框\r\n  open: () => void\r\n  // 关闭picker弹框\r\n  close: () => void\r\n}\r\n\r\nexport type SelectPickerInstance = ComponentPublicInstance<SelectPickerExpose, SelectPickerProps>\r\n"],"names":["baseProps","makeStringProp","makeBooleanProp","makeNumberProp","makeRequiredProp","makeArrayProp"],"mappings":";;AAMO,MAAM,oBAAoB;AAAA,EAC/B,GAAGA,iDAAA;AAAA;AAAA,EAEH,OAAO;AAAA;AAAA,EAEP,YAAYC,gEAAe,KAAK;AAAA;AAAA,EAEhC,UAAUC,iEAAgB,KAAK;AAAA;AAAA,EAE/B,UAAU;AAAA;AAAA,EAEV,aAAa;AAAA;AAAA,EAEb,OAAO;AAAA;AAAA,EAEP,YAAYA,iEAAgB,KAAK;AAAA;AAAA,EAEjC,OAAOA,iEAAgB,KAAK;AAAA;AAAA,EAE5B,UAAUA,iEAAgB,KAAK;AAAA;AAAA,EAE/B,cAAcA,iEAAgB,KAAK;AAAA;AAAA,EAEnC,gBAAgBA,iEAAgB,KAAK;AAAA;AAAA,EAErC,MAAM;AAAA;AAAA,EAEN,cAAc;AAAA;AAAA,EAEd,KAAKC,gEAAe,CAAC;AAAA;AAAA,EAErB,KAAKA,gEAAe,CAAC;AAAA;AAAA,EAErB,YAAY;AAAA;AAAA,EAEZ,SAASD,iEAAgB,KAAK;AAAA;AAAA,EAE9B,cAAcD,gEAAe,SAAS;AAAA;AAAA,EAEtC,mBAAmBC,iEAAgB,IAAI;AAAA;AAAA,EAEvC,YAAYE,iDAAiB,iBAAA,CAAC,QAAQ,QAAQ,SAAS,KAAK,CAAwE;AAAA;AAAA,EAEpI,SAASC,iDAAAA,cAAmC;AAAA;AAAA,EAE5C,MAAMJ,gEAAiC,UAAU;AAAA;AAAA,EAEjD,UAAUA,gEAAe,OAAO;AAAA;AAAA,EAEhC,UAAUA,gEAAe,OAAO;AAAA;AAAA,EAEhC,mBAAmB;AAAA;AAAA,EAEnB,eAAe;AAAA;AAAA,EAEf,eAAe;AAAA;AAAA,EAEf,QAAQE,gEAAe,EAAE;AAAA;AAAA,EAEzB,qBAAqBD,iEAAgB,IAAI;AAAA;AAAA,EAEzC,YAAYA,iEAAgB,KAAK;AAAA;AAAA,EAEjC,mBAAmB;AAAA;AAAA,EAEnB,UAAUA,iEAAgB,KAAK;AAAA;AAAA,EAE/B,gBAAgBA,iEAAgB,IAAI;AAAA;AAAA,EAEpC,MAAM;AAAA;AAAA,EAEN,OAAOG,iDAAAA,cAA4B;AAAA;AAAA,EAEnC,oBAAoBJ,gEAAe,EAAE;AAAA;AAAA,EAErC,kBAAkBA,gEAAe,EAAE;AAAA;AAAA,EAEnC,kBAAkBA,gEAAe,EAAE;AAAA;AAAA,EAEnC,aAAaC,iEAAgB,IAAI;AAAA;AAAA;AAAA;AAAA,EAIjC,WAAWA,iEAAgB,KAAK;AAClC;;"}