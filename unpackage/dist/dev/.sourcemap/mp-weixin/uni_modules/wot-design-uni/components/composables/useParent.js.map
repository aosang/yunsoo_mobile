{"version":3,"file":"useParent.js","sources":["uni_modules/wot-design-uni/components/composables/useParent.ts"],"sourcesContent":["import {\r\n  ref,\r\n  inject,\r\n  computed,\r\n  onUnmounted,\r\n  type InjectionKey,\r\n  getCurrentInstance,\r\n  type ComponentPublicInstance,\r\n  type ComponentInternalInstance\r\n} from 'vue'\r\n\r\ntype ParentProvide<T> = T & {\r\n  link(child: ComponentInternalInstance): void\r\n  unlink(child: ComponentInternalInstance): void\r\n  children: ComponentPublicInstance[]\r\n  internalChildren: ComponentInternalInstance[]\r\n}\r\n\r\nexport function useParent<T>(key: InjectionKey<ParentProvide<T>>) {\r\n  const parent = inject(key, null)\r\n\r\n  if (parent) {\r\n    const instance = getCurrentInstance()!\r\n    const { link, unlink, internalChildren } = parent\r\n\r\n    link(instance)\r\n    onUnmounted(() => unlink(instance))\r\n\r\n    const index = computed(() => internalChildren.indexOf(instance))\r\n\r\n    return {\r\n      parent,\r\n      index\r\n    }\r\n  }\r\n\r\n  return {\r\n    parent: null,\r\n    index: ref(-1)\r\n  }\r\n}\r\n"],"names":["inject","getCurrentInstance","onUnmounted","computed","ref"],"mappings":";;AAkBO,SAAS,UAAa,KAAqC;AAC1D,QAAA,SAASA,cAAAA,OAAO,KAAK,IAAI;AAE/B,MAAI,QAAQ;AACV,UAAM,WAAWC,cAAAA;AACjB,UAAM,EAAE,MAAM,QAAQ,iBAAA,IAAqB;AAE3C,SAAK,QAAQ;AACDC,kBAAAA,YAAA,MAAM,OAAO,QAAQ,CAAC;AAElC,UAAM,QAAQC,cAAAA,SAAS,MAAM,iBAAiB,QAAQ,QAAQ,CAAC;AAExD,WAAA;AAAA,MACL;AAAA,MACA;AAAA,IAAA;AAAA,EAEJ;AAEO,SAAA;AAAA,IACL,QAAQ;AAAA,IACR,OAAOC,cAAAA,IAAI,EAAE;AAAA,EAAA;AAEjB;;"}