{"version":3,"file":"wd-swipe-action.js","sources":["uni_modules/wot-design-uni/components/wd-swipe-action/wd-swipe-action.vue","D:/software/HBuilderX/plugins/uniapp-cli-vite/uniComponent:/RjoveXVuc29vX21vYmlsZS91bmlfbW9kdWxlcy93b3QtZGVzaWduLXVuaS9jb21wb25lbnRzL3dkLXN3aXBlLWFjdGlvbi93ZC1zd2lwZS1hY3Rpb24udnVl"],"sourcesContent":["<template>\r\n  <!--注意阻止横向滑动的穿透：横向移动时阻止冒泡-->\r\n  <view\r\n    :class=\"`wd-swipe-action ${customClass}`\"\r\n    :style=\"customStyle\"\r\n    @click.stop=\"onClick()\"\r\n    @touchstart=\"startDrag\"\r\n    @touchmove=\"onDrag\"\r\n    @touchend=\"endDrag\"\r\n    @touchcancel=\"endDrag\"\r\n  >\r\n    <!--容器-->\r\n    <view class=\"wd-swipe-action__wrapper\" :style=\"wrapperStyle\">\r\n      <!--左侧操作-->\r\n      <view class=\"wd-swipe-action__left\" @click=\"onClick('left')\">\r\n        <slot name=\"left\" />\r\n      </view>\r\n      <!--内容-->\r\n      <slot />\r\n      <!--右侧操作-->\r\n      <view class=\"wd-swipe-action__right\" @click=\"onClick('right')\">\r\n        <slot name=\"right\" />\r\n      </view>\r\n    </view>\r\n  </view>\r\n</template>\r\n<script lang=\"ts\">\r\nexport default {\r\n  name: 'wd-swipe-action',\r\n  options: {\r\n    addGlobalClass: true,\r\n    virtualHost: true,\r\n    styleIsolation: 'shared'\r\n  }\r\n}\r\n</script>\r\n<script lang=\"ts\" setup>\r\nimport { getCurrentInstance, inject, onBeforeMount, onBeforeUnmount, onMounted, ref, watch } from 'vue'\r\nimport { closeOther, pushToQueue, removeFromQueue } from '../common/clickoutside'\r\nimport { type Queue, queueKey } from '../composables/useQueue'\r\nimport { useTouch } from '../composables/useTouch'\r\nimport { getRect } from '../common/util'\r\nimport { swipeActionProps, type SwipeActionPosition, type SwipeActionReason, type SwipeActionStatus } from './types'\r\n\r\nconst props = defineProps(swipeActionProps)\r\nconst emit = defineEmits(['click', 'update:modelValue'])\r\n\r\nconst queue = inject<Queue | null>(queueKey, null)\r\n\r\nconst wrapperStyle = ref<string>('')\r\n\r\n// 滑动开始时，wrapper的偏移量\r\nconst originOffset = ref<number>(0)\r\n// wrapper现在的偏移量\r\nconst wrapperOffset = ref<number>(0)\r\n// 是否处于滑动状态\r\nconst touching = ref<boolean>(false)\r\n\r\nconst touch = useTouch()\r\n\r\nconst { proxy } = getCurrentInstance() as any\r\n\r\nwatch(\r\n  () => props.modelValue,\r\n  (value, old) => {\r\n    changeState(value, old)\r\n  },\r\n  {\r\n    deep: true\r\n  }\r\n)\r\n\r\nonBeforeMount(() => {\r\n  if (queue && queue.pushToQueue) {\r\n    queue.pushToQueue(proxy)\r\n  } else {\r\n    pushToQueue(proxy)\r\n  }\r\n  // 滑动开始时，wrapper的偏移量\r\n  originOffset.value = 0\r\n  // wrapper现在的偏移量\r\n  wrapperOffset.value = 0\r\n  // 是否处于滑动状态\r\n  touching.value = false\r\n})\r\n\r\nonMounted(() => {\r\n  touching.value = true\r\n  changeState(props.modelValue)\r\n  touching.value = false\r\n})\r\n\r\nonBeforeUnmount(() => {\r\n  if (queue && queue.removeFromQueue) {\r\n    queue.removeFromQueue(proxy)\r\n  } else {\r\n    removeFromQueue(proxy)\r\n  }\r\n})\r\n\r\nfunction changeState(value: SwipeActionStatus, old?: SwipeActionStatus) {\r\n  if (props.disabled) {\r\n    return\r\n  }\r\n  getWidths().then(([leftWidth, rightWidth]) => {\r\n    switch (value) {\r\n      case 'close':\r\n        // 调用此函数时，偏移量本就是0\r\n        if (wrapperOffset.value === 0) return\r\n        close('value', old)\r\n        break\r\n      case 'left':\r\n        swipeMove(leftWidth)\r\n        break\r\n      case 'right':\r\n        swipeMove(-rightWidth)\r\n        break\r\n    }\r\n  })\r\n}\r\n\r\n/**\r\n * @description 获取左/右操作按钮的宽度\r\n * @return {Promise<[Number, Number]>} 左宽度、右宽度\r\n */\r\nfunction getWidths() {\r\n  return Promise.all([\r\n    getRect('.wd-swipe-action__left', false, proxy).then((rect) => {\r\n      return rect.width ? rect.width : 0\r\n    }),\r\n    getRect('.wd-swipe-action__right', false, proxy).then((rect) => {\r\n      return rect.width ? rect.width : 0\r\n    })\r\n  ])\r\n}\r\n/**\r\n * @description wrapper滑动函数\r\n * @param {Number} offset 滑动漂移量\r\n */\r\nfunction swipeMove(offset = 0) {\r\n  // this.offset = offset\r\n  const transform = `translate3d(${offset}px, 0, 0)`\r\n  // 跟随手指滑动，不需要动画\r\n  const transition = touching.value ? 'none' : '.6s cubic-bezier(0.18, 0.89, 0.32, 1)'\r\n  wrapperStyle.value = `\r\n        -webkit-transform: ${transform};\r\n        -webkit-transition: ${transition};\r\n        transform: ${transform};\r\n        transition: ${transition};\r\n      `\r\n  // 记录容器当前偏移的量\r\n  wrapperOffset.value = offset\r\n}\r\n/**\r\n * @description click的handler\r\n * @param event\r\n */\r\nfunction onClick(position?: SwipeActionPosition) {\r\n  if (props.disabled || wrapperOffset.value === 0) {\r\n    return\r\n  }\r\n\r\n  position = position || 'inside'\r\n  close('click', position)\r\n  emit('click', {\r\n    value: position\r\n  })\r\n}\r\n/**\r\n * @description 开始滑动\r\n */\r\nfunction startDrag(event: TouchEvent) {\r\n  if (props.disabled) return\r\n\r\n  originOffset.value = wrapperOffset.value\r\n  touch.touchStart(event)\r\n  if (queue && queue.closeOther) {\r\n    queue.closeOther(proxy)\r\n  } else {\r\n    closeOther(proxy)\r\n  }\r\n}\r\n/**\r\n * @description 滑动时，逐渐展示按钮\r\n * @param event\r\n */\r\nfunction onDrag(event: TouchEvent) {\r\n  if (props.disabled) return\r\n\r\n  touch.touchMove(event)\r\n  if (touch.direction.value === 'vertical') {\r\n    return\r\n  } else {\r\n    event.preventDefault()\r\n    event.stopPropagation()\r\n  }\r\n\r\n  touching.value = true\r\n\r\n  // 本次滑动，wrapper应该设置的偏移量\r\n  const offset = originOffset.value + touch.deltaX.value\r\n  getWidths().then(([leftWidth, rightWidth]) => {\r\n    // 如果需要想滑出来的按钮不存在，对应的按钮肯定滑不出来，容器处于初始状态。此时需要模拟一下位于此处的start事件。\r\n    if ((leftWidth === 0 && offset > 0) || (rightWidth === 0 && offset < 0)) {\r\n      swipeMove(0)\r\n      return startDrag(event)\r\n    }\r\n    // 按钮已经展示完了，再滑动没有任何意义，相当于滑动结束。此时需要模拟一下位于此处的start事件。\r\n    if (leftWidth !== 0 && offset >= leftWidth) {\r\n      swipeMove(leftWidth)\r\n      return startDrag(event)\r\n    } else if (rightWidth !== 0 && -offset >= rightWidth) {\r\n      swipeMove(-rightWidth)\r\n      return startDrag(event)\r\n    }\r\n    swipeMove(offset)\r\n  })\r\n}\r\n/**\r\n * @description 滑动结束，自动修正位置\r\n */\r\nfunction endDrag() {\r\n  if (props.disabled) return\r\n  // 滑出\"操作按钮\"的阈值\r\n  const THRESHOLD = 0.3\r\n  touching.value = false\r\n\r\n  getWidths().then(([leftWidth, rightWidth]) => {\r\n    if (\r\n      originOffset.value < 0 && // 之前展示的是右按钮\r\n      wrapperOffset.value < 0 && // 目前仍然是右按钮\r\n      wrapperOffset.value - originOffset.value < rightWidth * THRESHOLD // 并且滑动的范围不超过右边框阀值\r\n    ) {\r\n      swipeMove(-rightWidth) // 回归右按钮\r\n      emit('update:modelValue', 'right')\r\n    } else if (\r\n      originOffset.value > 0 && // 之前展示的是左按钮\r\n      wrapperOffset.value > 0 && // 现在仍然是左按钮\r\n      originOffset.value - wrapperOffset.value < leftWidth * THRESHOLD // 并且滑动的范围不超过左按钮阀值\r\n    ) {\r\n      swipeMove(leftWidth) // 回归左按钮\r\n      emit('update:modelValue', 'left')\r\n    } else if (\r\n      rightWidth > 0 &&\r\n      originOffset.value >= 0 && // 之前是初始状态或者展示左按钮显\r\n      wrapperOffset.value < 0 && // 现在展示右按钮\r\n      Math.abs(wrapperOffset.value) > rightWidth * THRESHOLD // 视图中已经展示的右按钮长度超过阀值\r\n    ) {\r\n      swipeMove(-rightWidth)\r\n      emit('update:modelValue', 'right')\r\n    } else if (\r\n      leftWidth > 0 &&\r\n      originOffset.value <= 0 && // 之前初始状态或者右按钮显示\r\n      wrapperOffset.value > 0 && // 现在左按钮\r\n      Math.abs(wrapperOffset.value) > leftWidth * THRESHOLD // 视图中已经展示的左按钮长度超过阀值\r\n    ) {\r\n      swipeMove(leftWidth)\r\n      emit('update:modelValue', 'left')\r\n    } else {\r\n      // 回归初始状态\r\n      close('swipe')\r\n    }\r\n  })\r\n}\r\n/**\r\n * @description 关闭操过按钮，并在合适的时候调用 beforeClose\r\n */\r\nfunction close(reason: SwipeActionReason, position?: SwipeActionPosition) {\r\n  if (reason === 'swipe' && originOffset.value === 0) {\r\n    // offset：0 ——> offset：0\r\n    return swipeMove(0)\r\n  } else if (reason === 'swipe' && originOffset.value > 0) {\r\n    // offset > 0 ——> offset：0\r\n    position = 'left'\r\n  } else if (reason === 'swipe' && originOffset.value < 0) {\r\n    // offset < 0 ——> offset：0\r\n    position = 'right'\r\n  }\r\n\r\n  if (reason && position) {\r\n    props.beforeClose && props.beforeClose(reason, position)\r\n  }\r\n\r\n  swipeMove(0)\r\n  if (props.modelValue !== 'close') {\r\n    emit('update:modelValue', 'close')\r\n  }\r\n}\r\n\r\ndefineExpose({ close })\r\n</script>\r\n<style lang=\"scss\" scoped>\r\n@import './index.scss';\r\n</style>\r\n","import Component from 'F:/yunsoo_mobile/uni_modules/wot-design-uni/components/wd-swipe-action/wd-swipe-action.vue'\nwx.createComponent(Component)"],"names":["inject","queueKey","ref","useTouch","getCurrentInstance","watch","onBeforeMount","pushToQueue","onMounted","onBeforeUnmount","removeFromQueue","getRect","closeOther"],"mappings":"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"}