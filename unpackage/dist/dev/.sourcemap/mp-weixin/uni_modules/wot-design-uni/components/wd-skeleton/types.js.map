{"version":3,"file":"types.js","sources":["uni_modules/wot-design-uni/components/wd-skeleton/types.ts"],"sourcesContent":["import type { PropType, ExtractPropTypes, CSSProperties } from 'vue'\r\nimport { makeArrayProp, makeBooleanProp, makeStringProp } from '../common/props'\r\n\r\nexport type SkeletonTheme = 'text' | 'avatar' | 'paragraph' | 'image'\r\nexport type SkeletonAnimation = 'gradient' | 'flashed'\r\nexport type SkeletonRowColObj = {\r\n  [key: string]: any\r\n  type?: 'rect' | 'circle' | 'text'\r\n  size?: string | number\r\n  width?: string | number\r\n  height?: string | number\r\n  margin?: string | number\r\n  background?: string\r\n  marginLeft?: string | number\r\n  marginRight?: string | number\r\n  borderRadius?: string | number\r\n  backgroundColor?: string\r\n}\r\nexport type SkeletonRowCol = number | SkeletonRowColObj | Array<SkeletonRowColObj>\r\nexport type SkeletonThemeVars = {\r\n  notifyPadding?: string\r\n  notifyFontSize?: string\r\n  notifyTextColor?: string\r\n  notifyLineHeight?: number | string\r\n  notifyDangerBackground?: string\r\n  notifyPrimaryBackground?: string\r\n  notifySuccessBackground?: string\r\n  notifyWarningBackground?: string\r\n}\r\nexport const skeletonProps = {\r\n  /**\r\n   * 骨架图风格，有基础、头像组合等两大类\r\n   */\r\n  theme: makeStringProp<SkeletonTheme>('text'),\r\n  /**\r\n   * 用于设置行列数量、宽度高度、间距等。\r\n   * @example\r\n   * 【示例一】，`[1, 1, 2]` 表示输出三行骨架图，第一行一列，第二行一列，第三行两列。\r\n   * 【示例二】，`[1, 1, { width: '100px' }]` 表示自定义第三行的宽度为 `100px`。\r\n   * 【示例三】，`[1, 2, [{ width, height }, { width, height, marginLeft }]]` 表示第三行有两列，且自定义宽度、高度和间距\r\n   */\r\n  rowCol: makeArrayProp<SkeletonRowCol>(),\r\n  /**\r\n   * 是否为加载状态，如果是则显示骨架图，如果不是则显示加载完成的内容\r\n   * @default true\r\n   */\r\n  loading: makeBooleanProp(true),\r\n  /**\r\n   * 动画效果，有「渐变加载动画」和「闪烁加载动画」两种。值为空则表示没有动画\r\n   */\r\n  animation: {\r\n    type: String as PropType<SkeletonAnimation>,\r\n    default: ''\r\n  },\r\n  // 自定义类名\r\n  customClass: {\r\n    type: [String, Array, Object],\r\n    default: ''\r\n  },\r\n  // 自定义样式\r\n  customStyle: {\r\n    type: Object as PropType<CSSProperties>,\r\n    default() {\r\n      return {}\r\n    }\r\n  }\r\n}\r\n\r\nexport type SkeletonProps = ExtractPropTypes<typeof skeletonProps>\r\n"],"names":["makeStringProp","makeArrayProp","makeBooleanProp"],"mappings":";;AA6BO,MAAM,gBAAgB;AAAA;AAAA;AAAA;AAAA,EAI3B,OAAOA,gEAA8B,MAAM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQ3C,QAAQC,iDAAAA,cAA8B;AAAA;AAAA;AAAA;AAAA;AAAA,EAKtC,SAASC,iEAAgB,IAAI;AAAA;AAAA;AAAA;AAAA,EAI7B,WAAW;AAAA,IACT,MAAM;AAAA,IACN,SAAS;AAAA,EACX;AAAA;AAAA,EAEA,aAAa;AAAA,IACX,MAAM,CAAC,QAAQ,OAAO,MAAM;AAAA,IAC5B,SAAS;AAAA,EACX;AAAA;AAAA,EAEA,aAAa;AAAA,IACX,MAAM;AAAA,IACN,UAAU;AACR,aAAO;IACT;AAAA,EACF;AACF;;"}